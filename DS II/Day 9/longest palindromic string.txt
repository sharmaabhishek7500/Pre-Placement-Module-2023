class Solution {
public:
	string longestPalindrome(string s) {
		int n = s.size(), longest = 0;
		string ans = "";
		
		// Check for odd length palindrome
		for (int i = 0; i < n; i++) {
			int l = i, r = i;
			while (l >= 0 && r < n) {
				if (s[l] != s[r]) {
					break;
				}
				--l, ++r;
			} ++l, --r;
			int len = r - l + 1;
			if (len > longest) {
				longest = len;
				ans = s.substr(l, len);
			}
		}
		
		// Check for even length palindrome
		for (int i = 0; i < n - 1; i++) {
			int l = i, r = i + 1;
			while (l >= 0 && r < n) {
				if (s[l] != s[r]) {
					break;
				}
				--l, ++r;
			} ++l, --r;
			int len = r - l + 1;
			if (len > longest) {
				longest = len;
				ans = s.substr(l, len);
			}
		}
		return ans;
	}
};